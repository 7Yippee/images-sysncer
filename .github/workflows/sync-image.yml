name: Sync-Images-to-DockerHub
run-name: ${{ github.actor }} is Sync Images to DockerHub.

on:
  push:
    branches: [ "main" ]
    paths:
      - 'image-list.txt'
      - '.github/workflows/sync-images.yml'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  syncimages:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repos
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.9.1

    - name: Install Skopeo
      run: |
        sudo apt-get update
        sudo apt-get install -y skopeo

    - name: Login to Aliyun Registry
      uses: docker/login-action@v2.2.0
      with:
        registry: registry.cn-guangzhou.aliyuncs.com
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        logout: false
        
    - name: Sync Images to Aliyun Registry
      run: |
        #!/usr/bin/env bash
        set -e
        
        # 创建日志目录和文件
        mkdir -p logs
        touch logs/success.log logs/failed.log
        
        # 定义最大并行数
        MAX_PARALLEL=5
        
        echo "Starting image sync process..."
        
        # 处理每一行镜像
        while IFS= read -r image || [ -n "$image" ]; do
          # 跳过空行和注释
          [[ -z "$image" || "$image" =~ ^#.*$ ]] && continue
          
          # 等待，直到运行的任务少于最大并行数
          while [ $(jobs -r | wc -l) -ge $MAX_PARALLEL ]; do
            sleep 1
          done
          
          # 处理镜像名称
          if [[ $image == docker.io/library/* ]]; then
            # 处理官方镜像
            image_name=${image#docker.io/library/}
          elif [[ $image == */mirrored-* ]]; then
            # 处理 mirrored 镜像，提取实际的镜像名称
            image_name=$(echo "$image" | sed -E 's|.*/mirrored-(.*)|\1|')
          else
            # 其他镜像，保留最后一部分
            image_name=$(basename "$image")
          fi
          
          # 从 image_name 中分离标签
          if [[ $image_name == *:* ]]; then
            name_part=${image_name%:*}
            tag_part=${image_name#*:}
          else
            name_part=$image_name
            tag_part="latest"
          fi
          
          target_image="registry.cn-guangzhou.aliyuncs.com/yippee/${name_part}:${tag_part}"
          
          echo "$(date '+%Y-%m-%d %H:%M:%S') 开始同步: $image -> $target_image"
          
          # 后台运行同步任务
          (skopeo copy --all "docker://$image" "docker://$target_image" && \
           echo "$(date '+%Y-%m-%d %H:%M:%S') 成功: $image -> $target_image" >> logs/success.log || \
           echo "$(date '+%Y-%m-%d %H:%M:%S') 失败: $image -> $target_image" >> logs/failed.log) &
        done < image-list.txt
        
        # 等待所有后台任务完成
        wait
        
        # 输出结果统计
        echo "============ 同步结果 ============"
        echo "成功: $(wc -l < logs/success.log)"
        echo "失败: $(wc -l < logs/failed.log)"
        
        # 如果有失败的，显示失败列表
        if [ -s logs/failed.log ]; then
          echo -e "\n失败的镜像列表:"
          cat logs/failed.log
          exit 1
        fi
